#!/usr/bin/env python
PACKAGE = "hydrus"

from dynamic_reconfigure.parameter_generator_catkin import *

LQI_TORSION_GAIN_FLAG = 0
LQI_TORSION_MU_P_GAIN = 1
LQI_TORSION_MU_D_GAIN = 2
LQI_TORSION_EPSILON_RP_P = 3
LQI_TORSION_EPSILON_RP_I = 4
LQI_TORSION_EPSILON_RP_D = 5
LQI_TORSION_EPSILON_Y_P  = 6
LQI_TORSION_EPSILON_Y_I  = 7
LQI_TORSION_EPSILON_Y_D  = 8
LQI_TORSION_ALPHA_RP_P = 9
LQI_TORSION_ALPHA_RP_I = 10
LQI_TORSION_ALPHA_RP_D = 11
LQI_TORSION_ALPHA_Y_P = 12
LQI_TORSION_ALPHA_Y_I = 13
LQI_TORSION_ALPHA_Y_D = 14
LQI_TORSION_NULL_SPACE_SHIFT_THREASH = 15
LQI_TORSION_NULL_SPACE_SHIFT_LIMIT_RATIO = 16
LQI_TORSION_NULL_SPACE_SHIFT_INIT_RATIO = 17

gen = ParameterGenerator()

gen.add("lqi_gain_flag", bool_t, LQI_TORSION_GAIN_FLAG, "LQI Gain Flag", False)

gen.add("q_mu", double_t, LQI_TORSION_MU_P_GAIN, "LQI Torsion P Gain", 10.0, 0, 500000)
gen.add("q_mu_d", double_t, LQI_TORSION_MU_D_GAIN, "LQI Torsion D Gain", 1.0, 0, 500000)
gen.add("torsion_epsilon_rp_p", double_t, LQI_TORSION_EPSILON_RP_P, "LQI Torsion epsilon limit for roll&pitch p gain", 1.0, 0, 1.0)
gen.add("torsion_epsilon_rp_i", double_t, LQI_TORSION_EPSILON_RP_I, "LQI Torsion epsilon limit for roll&pitch i gain", 1.0, 0, 1.0)
gen.add("torsion_epsilon_rp_d", double_t, LQI_TORSION_EPSILON_RP_D, "LQI Torsion epsilon limit for roll&pitch d gain", 1.0, 0, 1.0)
gen.add("torsion_epsilon_y_p", double_t, LQI_TORSION_EPSILON_Y_P, "LQI Torsion epsilon limit for yaw p gain", 1.0, 0, 1.0)
gen.add("torsion_epsilon_y_i", double_t, LQI_TORSION_EPSILON_Y_I, "LQI Torsion epsilon limit for yaw i gain", 1.0, 0, 1.0)
gen.add("torsion_epsilon_y_d", double_t, LQI_TORSION_EPSILON_Y_D, "LQI Torsion epsilon limit for yaw d gain", 1.0, 0, 1.0)
gen.add("torsion_alpha_rp_p", double_t, LQI_TORSION_ALPHA_RP_P, "LQI Torsion alpha const for roll&pitch p gain", 0.0, 0, 1.0)
gen.add("torsion_alpha_rp_i", double_t, LQI_TORSION_ALPHA_RP_I, "LQI Torsion alpha const for roll&pitch i gain", 0.0, 0, 1.0)
gen.add("torsion_alpha_rp_d", double_t, LQI_TORSION_ALPHA_RP_D, "LQI Torsion alpha const for roll&pitch d gain", 0.0, 0, 1.0)
gen.add("torsion_alpha_y_p", double_t, LQI_TORSION_ALPHA_Y_P, "LQI Torsion alpha const for yaw p gain", 0.0, 0, 1.0)
gen.add("torsion_alpha_y_i", double_t, LQI_TORSION_ALPHA_Y_I, "LQI Torsion alpha const for yaw i gain", 0.0, 0, 1.0)
gen.add("torsion_alpha_y_d", double_t, LQI_TORSION_ALPHA_Y_D, "LQI Torsion alpha const for yaw d gain", 0.0, 0, 1.0)
gen.add("null_space_shift_thresh", double_t, LQI_TORSION_NULL_SPACE_SHIFT_THREASH, "LQI Torsion null space shift thresh", 0.0, 0, 1.0)
gen.add("null_space_shift_limit_ratio", double_t, LQI_TORSION_NULL_SPACE_SHIFT_LIMIT_RATIO, "LQI Torsion null space shift limit ratio", 0.0, 0, 10.0)
gen.add("null_space_shift_init_ratio", double_t, LQI_TORSION_NULL_SPACE_SHIFT_LIMIT_RATIO, "LQI Torsion null space shift init ratio", 0.0, 0, 100.0)

exit(gen.generate(PACKAGE, "hydrus", "LQI_torsion"))
