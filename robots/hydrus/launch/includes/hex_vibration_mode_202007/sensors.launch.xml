<?xml version="1.0"?>
<launch>

  <arg name="real_machine" default="false" />
  <arg name="simulation" default="false" />
  <arg name="robot_ns" default="hydrus" />
  <arg name="links" default="6" />
  <arg name="robot_model"/>
  <arg name="mocap_for_torsion" default="false" />

  <group ns="$(arg robot_ns)">

    <group if="$(arg real_machine)">
      <group unless="$(arg simulation)">
        <!-- fc & IMU & GPS -->
        <include file="$(find spinal_ros_bridge)/launch/serial.launch" >
          <arg name="baud" value="921600" />
          <arg name="port" value="/dev/flight_controller" />
        </include>

        <!-- mocap -->
        <include file="$(find aerial_robot_base)/launch/external_module/mocap.launch" />

        <group if="$(arg mocap_for_torsion)">
          <include file="$(find hydrus)/launch/includes/hex_vibration_mode_202007/mocap.launch" >
            <arg name="throttle" value="30"/>
	  </include>
        </group>

        <!-- leddar one -->
        <include file="$(find leddar_one)/launch/leddar_one.launch" >
          <arg name="port" value="/dev/leddarone" />
        </include>

      </group>
    </group>

    <!-- basic configuration for sensors (e.g. noise sigma) -->
    <rosparam file="$(find hydrus)/config/sensors/imu/spinal.yaml" command="load" />
    <rosparam file="$(find aerial_robot_base)/config/sensors/gps/ublox_m8n.yaml" command="load" />
    <rosparam file="$(find aerial_robot_base)/config/sensors/mocap.yaml" command="load" />
    <rosparam file="$(find aerial_robot_base)/config/sensors/altmeter/leddar_one.yaml" command="load" />

    <node pkg='hydrus' type='neuronAttitude2Torsion.py' name='imu2jointstate' output='screen'>
      <param name="simulation" value="$(arg simulation)"/>
      <param name="mode" value="adj"/>
      <param name="rate" value="30"/>
      <param name="links" value="$(arg links)"/>
      <param name="robot_name" value="$(arg robot_ns)"/>
      <param name="use_mocap" value="$(arg mocap_for_torsion)"/>
    </node>

    <node pkg="hydrus" type="torsion_mode_calculator" name="torsion_mode_calculator" output="screen">
      <param name="robot_description_control" command="$(find xacro)/xacro.py '$(arg robot_model)' robot_name:=$(arg robot_ns) links:=$(arg links) sim:=true fix_rotor:=1"/>
      <param name="root_on_fc" type="bool" value="false"/>
      <param name="rate" type="int" value="30"/>
      <!-- TODO limit mode num to reduce data size -->
      <!-- <param name="mode_num" type="int" value="2"/> -->
      <param name="torsion_constant" type="double" value="10.0"/>
      <param name="m_f_rate" type="double" value="0.0172"/>
      <param name="rotor_num" type="int" value="$(arg links)"/>
    </node>

  </group>

</launch>
